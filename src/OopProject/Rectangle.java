public class Rectangle
{
	//According to standard coding convention in java we must define instance variable always as private but methods can be public
	private float length;  //Instance Variable is private it means that it can't be accessed outside the Rectangle.java file
	private float breadth;
	//public float breadth; //Instance Variable is public it means that it can be accessed outside the Rectangle.java file

	public float getArea(){
		float area=length*breadth; //Variable inside any method is called local variable.
		return area;
	}
	float getPerimeter(){    //public is selected by default
		float perimeter=2*(length+breadth); //local variable
		return perimeter;
	}
	//Getters and setters are basically methods in java
	public float getLength(){//Getter for length
		return length;
	}
	public void setLength(float length){//Setter for length
		this.length=length;//In order to make our compiler understand that length on LHS is instance variable, use this keyword

	}
	//Similarly we can define getter and setter for breadth as well
	//But in IntelliJ IDEA we have shortcut that we don't have to write getter and setter for each instance variable again and again
    //Right click-->Generate option-->Getter and Setter
	//By proceeding forward IntelliJ IDEA itself generate getter and setter for selected instance variable
	//So below code is generated by intelliJ IDEA itself
	public float getBreadth() {
		return breadth;
	}
	public void setBreadth(float breadth) {
		this.breadth = breadth;
	}
	//So now we can use getter and setter inside Main1.java
}
